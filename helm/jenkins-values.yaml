clusterZone: "cluster.local"
master:
  replicaCount: 2
  componentName: "jenkins-master"
  image: "jenkins/jenkins"
  imageTag: "lts"
  imagePullPolicy: "Always"
  imagePullSecretName:
  lifecycle:
  numExecutors: 0
  useSecurity: true
  securityRealm: |-
    <securityRealm class="hudson.security.LegacySecurityRealm"/>
  authorizationStrategy: |-
     <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
       <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
     </authorizationStrategy>
  hostNetworking: false
  adminUser: "admin"
  rollingUpdate: {}
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  jenkinsUriPrefix: "/jenkins"
  serviceAnnotations: {}
  serviceType: ClusterIP
  deploymentLabels: {}
  serviceLabels: {}
  podLabels: {}
  healthProbes: true
  healthProbesLivenessTimeout: 5
  healthProbesReadinessTimeout: 5
  healthProbeLivenessPeriodSeconds: 10
  healthProbeReadinessPeriodSeconds: 10
  healthProbeLivenessFailureThreshold: 5
  healthProbeReadinessFailureThreshold: 3
  healthProbeLivenessInitialDelay: 90
  healthProbeReadinessInitialDelay: 60
  slaveListenerPort: 50000
  slaveHostPort:
  disabledAgentProtocols:
    - JNLP-connect
    - JNLP2-connect
  csrf:
    defaultCrumbIssuer:
      enabled: true
      proxyCompatability: true
  cli: false
  slaveListenerServiceType: "ClusterIP"
  slaveListenerServiceAnnotations: {}
  slaveKubernetesNamespace:
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  extraPorts:
  installPlugins:
    - kubernetes:1.16.0
    - workflow-job:2.32
    - workflow-aggregator:2.6
    - credentials-binding:1.19
    - git:3.10.0
    - ssh-slaves:1.30
  enableRawHtmlMarkupFormatter: false
  scriptApproval:
  initScripts:
  jobs:
  JCasC:
    enabled: false
    pluginVersion: "1.21"
    supportPluginVersion: "1.18"
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: Welcome to our CI\CD server.  This Jenkins is configured and managed 'as code'.
  customInitContainers: []
  sidecars:
    configAutoReload:
      enabled: false
      image: shadwell/k8s-sidecar:0.0.2
      imagePullPolicy: IfNotPresent
      resources:
      sshTcpPort: 1044
      folder: "/var/jenkins_home/casc_configs"
    other:
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  customConfigMap: false
  overwriteConfig: false
  overwriteJobs: false
  ingress:
    enabled: true
    apiVersion: "extensions/v1beta1"
    labels: {}
    annotations: {}
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    path: "/jenkins"
    hostName: localhost
  route:
    enabled: false
    labels: {}
    annotations: {}
  additionalConfig: {}
  hostAliases: []
  prometheus:
    enabled: false
    serviceMonitorAdditionalLabels: {}
    scrapeInterval: 60s
    scrapeEndpoint: /prometheus
    alertingRulesAdditionalLabels: {}
    alertingrules: []
agent:
  enabled: true
  replicaCount: 2
  image: "jenkins/jnlp-slave"
  imageTag: "3.27-1"
  customJenkinsLabels: []
  imagePullSecretName:
  componentName: "jenkins-slave"
  privileged: false
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  alwaysPullImage: false
  podRetention: "Never"
  envVars:
  volumes:
  nodeSelector: {}
  command:
  args:
  sideContainerName: "jnlp"
  TTYEnabled: false
  containerCap: 10
  podName: "default"
  idleMinutes: 0
  yamlTemplate:
persistence:
  enabled: true
  existingClaim:
  storageClass:
  annotations: {}
  accessMode: "ReadWriteOnce"
  size: "8Gi"
  volumes:
  mounts:
networkPolicy:
  enabled: true
  apiVersion: networking.k8s.io/v1
rbac:
  create: true
serviceAccount:
  create: true
  name:
  annotations: {}
serviceAccountAgent:
  create: false
  name:
  annotations: {}
backup:
  enabled: false
  componentName: "backup"
  schedule: "0 2 * * *"
  annotations:
    iam.amazonaws.com/role: "jenkins"
  image:
    repository: "nuvo/kube-tasks"
    tag: "0.1.2"
  extraArgs: []
  existingSecret: {}
checkDeprecation: true
